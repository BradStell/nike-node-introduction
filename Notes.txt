1. Explain Node and how it executes JS outside of browser
  - index.html vs .js file
  - browser console vs node REPL demonstration
  - interpreted language

2. declaring variables
  - use let
  - reassign variable to new type
  - show use of const
  - talk about how we use linters and typescript to avoid these problems

3. declaring functions
  - function that adds two numbers
  - function that prints hello in different language based on if statement
  - show how leaving off parameters results in undefined but still valid executable code

4. objects
  - show how to create an object
  - show how you can add new keys to objects at runtime
  - objects passed by reference into functions
  - object prototypes

5. arrays
  - demonstrate creating array with items in it
  - demonstrate some array methods
    push, pop, shift
  - demonstrate mixing types

5.a es6 fancy features
  - function expressions
  - object keys same as value
  - string concatenation `${}`

6. immutability and copying data

7. module system
  - commonjs (node)

############ Aug 05, 2020 ############# Stopping point ###

8. promises async/await

9. destructuring objects and arrays

10. Nodejs api
  - read/write file
  - buffers
  - crypto
  - url parsing
  - http
    - request
    - server

11. HOF

12. closures

13. this

14. hoisting

Typescript in ts directory

15. functional programming
  - es6 functions
    * forEach
    * map
    * filter
    * reduce
    * some
  - pure fns
    - side effects
  - immutability
  - function composition
  - currying
  - partial application

  ---- part 2?
  - lenses
  - functor
  - monad
  - mixins
  - composition harder with classes



## add to curriculum
classes
front end frameworks
lambda
eslint
